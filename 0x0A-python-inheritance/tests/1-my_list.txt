External tests associated with 1-my_list.py.

# 0 - Module import
>>> MyList = __import__('1-my_list').MyList

# 1 - Append to list of integer test
>>> my_list = MyList()
>>> my_list.append(1)
>>> my_list.append(4)
>>> my_list.append(2)
>>> my_list.append(3)

# 4 - print check
>>> print(my_list)
[1, 4, 2, 3]

# 2 - Append to list negative integer test
>>> my_list.append(-5)

# 3 - print check
>>> my_list.print_sorted()
[-5, 1, 2, 3, 4]

# 5 - Append high number to list of integer
>>> my_list.append(123524)
>>> my_list.print_sorted()
[-5, 1, 2, 3, 4, 123524]

# 4 - print check
>>> print(my_list)
[1, 4, 2, 3, -5, 123524]


# 6 - Append two arguments
>>> my_list.append(1, 4)
Traceback (most recent call last):
	...
TypeError: append() takes exactly one argument (2 given)

# 7 - Float number
>>> my_list.append(5.2)
>>> my_list.print_sorted()
[-5, 1, 2, 3, 4, 5.2, 123524]

# 7 - No arguments
>>> my_list.append()
Traceback (most recent call last):
	...
TypeError: append() takes exactly one argument (0 given)


# 10 - Function documentation
>>> import re
>>> func_doc = (MyList.__doc__)
>>> len(func_doc.splitlines()) > 2
True

# 12 - Shebang test
>>> with open("1-my_list.py", "r") as file:
...		first_line = file.readline()
...		if first_line.strip() == "#!/usr/bin/python3":
...			print(True)
True

# 17 - pep8 style test
>>> import os
>>> os.popen("1-my_list.py").read()
''

# 19 - Module documentation
>>> lines = __import__("1-my_list").MyList.__doc__
>>> len(lines) > 4
True